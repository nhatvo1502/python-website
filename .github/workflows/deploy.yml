name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build-script:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::566027688242:role/GitHubOIDCRole
          aws-region: us-east-1
      
      - name: Create tfstate bucket
        run: aws s3 mb s3://nnote-tfstate-031225

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
      
      - name: Terraform fmt
        run:
          terraform fmt -check
        working-directory: ./terraform
        continue-on-error: true

      - name: Terraform init
        run: terraform init -input=false
        working-directory: ./terraform

      - name: Terraform validate
        run: terraform validate
        working-directory: ./terraform
        continue-on-error: true

      - name: Terraform Plan
        run: terraform plan
        working-directory: ./terraform
        continue-on-error: false

      - name: Terraform Apply
        run: terraform apply --auto-approve
        working-directory: ./terraform
        continue-on-error: false
      
      - name: Auto clean up if Apply failed
        if: failure()
        run: |
          terraform destroy --auto-approve
          aws s3 rm s3://nnote-tfstate-031225 --recursive
          aws s3 rb s3://nnote-tfstate-031225 --force
      
      - name: Terraform Outputs
        run: |
          ecr_uri=${terraform output ecr_uri}
          echo $ecr_uri
      
      # - name: Export Terraform output
      #   id: tf
      #   if: success()
      #   run: |
      #     echo "TF_ECR_URI=${terraform output -raw ecr_uri}" >> $GITHUB_OUTPUT
      #     echo "TF_CLUSTER_ARN=${terraform output -raw cluster_arn}" >> $GITHUB_OUTPUT
      #     echo "TF_SERVICE_NAME=${terraform output -raw service_name}" >> $GITHUB_OUTPUT
      #     echo "TF_REGION=${terraform output -raw region}" >> $GITHUB_OUTPUT

      # - name: Log in to ECR
      #   run: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${terraform output ecr_uri}
      
      # - name: Build Docker
      #   run: docker build -t nnote-app .
      
      # - name: Tag Docker
      #   run: docker tag nnote-app:latest ${terraform output ecr_uri}:latest

      # - name: Push Docker
      #   run: docker push ${terraform output ecr_uri}:latest
      
      # - name: Force Redeployment ECS
      #   run: aws ecs update-service --cluster ${terraform output cluster_arn} --service ${terraform output service_name} --force-new-deployment --region ${terraform output region}